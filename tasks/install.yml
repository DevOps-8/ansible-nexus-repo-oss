---
- name: install | Creating Nexus User
  user:
    create_home: false
    home: /nonexistent
    name: nexus
    shell: /usr/sbin/nologin
    state: present
    system: true
  become: true

- name: install | Downloading Nexus Repo OSS
  unarchive:
    src: "{{ nexus_repo_oss_dl_url }}"
    dest: "{{ nexus_repo_oss_install_dir }}"
    remote_src: true
    creates: "{{ nexus_repo_oss_install_dir + '/nexus-' + nexus_repo_oss_version|string + '-01' }}"
  become: true

- name: install | Setting Permissions On Nexus Repo Dirs
  file:
    group: nexus
    owner: nexus
    path: "{{ item }}"
    state: directory
    recurse: true
  become: true
  loop:
    - "{{ nexus_repo_oss_install_dir + '/nexus-' + nexus_repo_oss_version|string + '-01' }}"
    - "{{ nexus_repo_oss_install_dir + '/sonatype-work' }}"

- name: install | Configuring Nexus Repo OSS Service
  template:
    src: nexus.service.j2
    dest: /etc/systemd/system/nexus.service
  become: true

- name: install | Ensuring Nexus Repo OSS Service Is Started and Enabled
  systemd:
    name: nexus.service
    state: started
    enabled: true
    daemon_reload: true
  become: true

- name: install | Checking For Initial Nexus Admin Password
  stat:
    path: "{{ nexus_repo_oss_install_dir + '/sonatype-work/nexus' + nexus_repo_oss_version.split('.')[0]|string + '/admin.password' }}"
  register: nexus_initial_password

- name: install | Capturing Nexus Admin Password
  slurp:
    src: "{{ nexus_repo_oss_install_dir + '/sonatype-work/nexus' + nexus_repo_oss_version.split('.')[0]|string + '/admin.password' }}"
  register: nexus_admin_password
  when: nexus_initial_password['stat']['exists']

- name: install | Displaying Nexus Admin Password
  debug:
    msg: "Admin password: {{ nexus_admin_password['content'] | b64decode }}"
  when: nexus_initial_password['stat']['exists']
